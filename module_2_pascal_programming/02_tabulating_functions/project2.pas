program project2;

{Выполнил Арцибасов А.В. Вариант №1. Определить вид четырехугольника и длины его сторон}

var
  x1:double;   //Левое значение диапазона
  x2:double;   //Правое значение диапазона
  dx:double;   //Шаг
  i:integer;   //Номер точки
  N:integer;   //Номер последней точки
  j1:integer;  //Число изменения знака первой функции по конкретным точкам
  k1:integer;  //Число изменения знака второй функции по конкретным точкам
  otr:integer; //Переменная отвечающая за существование отрицательного значения у второй функции
  pol:integer; //Переменная отвечающая за существование положительного значения у второй функции

BEGIN
  writeln('Введите диапазон (x1 и x2, где x1<x2)'); //Требование ввода диапазона
  read(x1,x2); //Ввод диапазона
  while x1>=x2 do begin //Проверка на соответствие с требованием (с последующим исправлением в случае ошибки)
                  writeln ('В введененных значениях x1>=x2, что недопустимо. Введите диапазон еще раз');
                  read(x1,x2); //Ввод диапазона
                  end;
  writeln('Введите шаг (dx>0)'); //Требование ввода шага
  readln(dx); //Ввод шага
  while (x2-x1<dx) and (dx<=0) do begin //Проверка на соответствие с требованием (с последующим исправлением в случае ошибки)
                                  writeln ('Введенный шаг dx<=0, что недопустимо. Введите шаг еще раз');
                                  read(dx); //Ввод шага
                                  end;
  i:=1; //Номер тчоки
  N:=trunc((x2-x1)/dx)+1; //Номер последней/предпоследней точки (в зависимости от ситуации)
  j1:=0; //Число изменения знака первой функции
  k1:=0; //Число изменения знака второй функции
  writeln ('Номер   Значение   Функция     Функция'); //Названия столбцов
  writeln ('Точки   аргумента   sin(x)      ln(x)'); //Названия столбцов
  writeln (#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205); //Разделительная черта
  for i:=1 to N do begin //Начало цикла
                   write (i:4,' '); //Вывод номера точки
                   write (x1:5,'   '); //Вывод значения точки
                   write (sin(x1):5,' '); //Вывод значения первой функции на этой точке
                   if (i>1) and (((sin(x1)>=0) and (sin(x1-dx)<0)) or ((sin(x1)<0) and (sin(x1-dx)>=0))) then j1:=j1+1; //Нахождение числа изменений знака первой функции
                   if x1<=0 then writeln ('  *   ') //Проверка на ОДЗ второй функции
                            else begin
                                 writeln (ln(x1):5,' '); //Вывод значения второй функции на конкретной точке
                                 if ln(x1)<0 then otr:=1; //Проверка на наличие отрицательного значения
                                 if ln(x1)>0 then pol:=1; //Проверка на наличие положительного значения
                                 end;
                   x1:=x1+dx; //Пошаговое увеличение значения точки
                   end; //Конец цикла
  if x1-dx<x2 then begin //Дополнительное условие на случай, если в интервале находится не целое число шагов
                   write (i+1:4,' '); //Вывод номера точки
                   write (x2:5,'   '); //Вывод значения точки
                   write (sin(x2):5,' '); //Вывод значения первой функции на этой точке
                   if (i>1) and (((sin(x2)>=0) and (sin(x1-dx)<0)) or ((sin(x2)<0) and (sin(x1-dx)>0))) then j1:=j1+1; //Нахождение числа изменений знака первой функции
                   if x1<=0 then writeln ('  *   ') //Проверка на ОДЗ второй функции
                            else begin
                                 writeln (ln(x2):5,' '); //Вывод значения второй функции на конкретной точке
                                 if ln(x2)<0 then otr:=1; //Проверка на наличие отрицательного значения
                                 if ln(x2)>0 then pol:=1; //Проверка на наличие положительного значения
                                 end;
                   x1:=x1+dx; //Пошаговое увеличение значения точки
                   end; //Конец условия
  if (otr=1) and (pol=1) then k1:=1; //Проверка на изменение знака второй функции
  writeln (#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205,#205); //Разделительная черта
  writeln('По перечисленным точкам первая функция поменяла знак столько раз: ',j1); //Вывод числа изменения знака первой функции
  writeln('По перечисленным точкам вторая функция поменяла знак столько раз: ',k1); //Вывод числа изменения знака второй функции
  readln(dx); //Команда для остановки преждевременного завершения программы
  END.
